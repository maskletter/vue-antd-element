{"version":3,"sources":["webpack:///./src/components/ckeditor.tsx","webpack:///./src/views/rich-text/ckeditor.tsx","webpack:///./src/components/admin/page.tsx"],"names":["Ckeditor","props","content","ckeditor","$input","_value","init","modelValue","val","setData","CKEDITOR","replace","value","height","on","getData","emit","destroy","console","log","type","Number","default","String","GeminiScrollbar","Page","myScrollbar","scrollTop","$el","$scroll","element","create","_viewElement","position","background","color","overflow","padding","boxSizing","title","fontSize","marginBottom","letterSpacing","slots"],"mappings":"+JAIMA,G,8BAAW,gBAAgB,SAACC,EAA4CC,GAE1E,IAAIC,EACEC,EAAS,iBACXC,EAAiB,GAGrB,gBAAU,WACNC,IACA,iBAAM,kBAAOL,EAAcM,cAAY,SAACC,GACjCA,GAAOH,GACVF,EAASM,QAAQD,SAIzB,IAAMF,EAAO,WACTH,EAAWO,SAASC,QAAQP,EAAOQ,MAAc,CAC7CC,OAAQZ,EAAMY,SAqBlBV,EAASM,QAASR,EAAcM,YAAcN,EAAMW,OAAS,IAC7DT,EAASW,GAAG,UAAU,WAClBT,EAASF,EAASY,UAClBb,EAAQc,KAAK,oBAAqBX,OAoB1C,OAhBA,gBAAY,WACRC,OAGJ,gBAAc,WAAK,MAIP,QAAR,EAAAH,SAAA,SAAUc,aAGd,gBAAY,WAAK,MACbC,QAAQC,IAAI,eACJ,QAAR,EAAAhB,SAAA,SAAUc,aAGP,4DACYb,GADZ,aAMXJ,EAASC,MAAQ,CACbY,OAAQ,CACJO,KAAMC,OACNC,QAAS,KAEbf,WAAYgB,OACZX,MAAOW,QAGI,Q,wBCzEA,6BAAgB,WAG3B,IAAMX,EAAQ,eAAI,OAElB,OAAO,yBAAC,aAAD,iCAAC,QAAD,MACS,QADT,2BAEEA,EAAMA,UAFR,OAAC,4BAAD,WAKgBA,EAAMA,MALtB,yCAKgBA,EAAMA,MALtB,mB,0ECTLY,G,UAAkB,EAAQ,SAS1BC,EAAO,gBAAgB,SAACxB,EAAsBC,GAChD,IAGIwB,EAHEC,EAAY,eAAI,GAChBC,EAAW,eAAgD,MAC3DC,EAAU,iBA8BhB,OAtBA,gBAAU,WAENH,EAAc,IAAIF,EAAgB,CAC9BM,QAASD,EAAQjB,QAClBmB,SACHH,EAAIhB,MAAQc,EAAYM,gBAG5B,gBAAY,eAKZ,gBAAY,WACRL,EAAUf,QAAUc,EAAYM,aAAaL,UAAYA,EAAUf,UAGvE,gBAAY,WACRc,EAAYT,aAIT,sCAAkB,CAAEgB,SAAU,WAAYC,WAAYjC,EAAMkC,MAAOtB,OAAQ,OAAQuB,SAAU,SAA7F,mBACOP,GADP,qBAEa,CAAEQ,QAAS,YAAaC,UAAW,eAFhD,CAGOrC,EAAMsC,OAAN,oBAA2B,CAACC,SAAU,OAAQC,aAAc,OAAQC,cAAe,QAAnF,CAA4FzC,EAAMsC,QAClGrC,EAAQyC,MAAMrB,SAAWpB,EAAQyC,MAAMrB,cAJ9C,OAAC,QAAD,OASc,kBAAMM,EAAIhB,QATxB,YAaXa,EAAKxB,MAAQ,CACTkC,MAAO,CACHf,KAAMG,OACND,QAAS,WAEbiB,MAAO,CACHnB,KAAM,CAACG,OAAQA,UAIR","file":"js/chunk-7a08959a.5d522005.js","sourcesContent":["import { defineComponent, ref, onMounted, watch, onDeactivated, onActivated, onUnmounted } from \"vue\"\n// import CKEDITOR from 'CKEDITOR'\n\n\nconst Ckeditor = defineComponent((props: { height?: number, value?: string }, content) => {\n\n    let ckeditor!: CKEDITOR.editor\n    const $input = ref();\n    let _value: string = '';\n\n    \n    onMounted(() => {\n        init();\n        watch(() => (props as any).modelValue, (val) => {\n            if(val == _value) return;\n            ckeditor.setData(val);\n        })\n    })\n\n    const init = () => {\n        ckeditor = CKEDITOR.replace($input.value as any, {\n            height: props.height,\n            // toolbar: [\n            //     //加粗     斜体，     下划线      穿过线      下标字        上标字\n            //     ['Bold','Italic','Underline','Strike','Subscript','Superscript'],\n            //     // 数字列表          实体列表            减小缩进    增大缩进\n            //     ['NumberedList','BulletedList','-','Outdent','Indent'],\n            //     //左对 齐             居中对齐          右对齐          两端对齐\n            //     ['JustifyLeft','JustifyCenter','JustifyRight','JustifyBlock'],\n            //     //超链接  取消超链接 锚点\n            //     ['Link','Unlink','Anchor'],\n            //     //图片    flash    表格       水平线            表情       特殊字符        分页符\n            //     ['Image','Flash','Table','HorizontalRule','Smiley','SpecialChar','PageBreak'],\n            //     '/',\n            //     // 样式       格式      字体    字体大小\n            //     ['Styles','Format','Font','FontSize'],\n            //     //文本颜色     背景颜色\n            //     ['TextColor','BGColor'],\n            //     //全屏           显示区块\n            //     ['Maximize', 'ShowBlocks','-']\n            //  ]\n        });\n        ckeditor.setData((props as any).modelValue || props.value || '')\n        ckeditor.on('change', () => {\n            _value = ckeditor.getData()\n            content.emit('update:modelValue', _value)\n        })\n    }\n\n    onActivated(() => {\n        init();\n    })\n\n    onDeactivated(() => {\n        /**\n         * ckeditor在keep-alive下回导致异常，因此需要手动销毁\n         */\n        ckeditor?.destroy();\n    })\n\n    onUnmounted(() => {\n        console.log('onUnmounted')\n        ckeditor?.destroy();\n    })\n\n    return () => <div>\n        <textarea ref={$input}></textarea>\n    </div>\n\n})\n\nCkeditor.props = {\n    height: {\n        type: Number,\n        default: 400\n    },\n    modelValue: String,\n    value: String\n} as any\n\nexport default Ckeditor;","import { ref, defineComponent } from 'vue';\nimport Page from '@/components/admin/page';\nimport Ckeditor from '@/components/ckeditor';\nimport { Card } from 'ant-design-vue';\nimport Br from '@/components/br';\n\n\nexport default defineComponent(() => {\n\n\n    const value = ref('222');\n\n    return () => <Page>\n        <Card title='编辑内容'>\n            {value.value}\n        </Card>\n        <Br />\n        <Ckeditor v-model={value.value} />\n    </Page>\n\n})","import { defineComponent, getCurrentInstance, KeepAlive, ref, ComponentInternalInstance, VNode, onUnmounted, onMounted, onActivated, inject } from 'vue';\nimport { BackTop } from 'ant-design-vue'\nimport { onBeforeRouteLeave } from 'vue-router'\nconst GeminiScrollbar = require('gemini-scrollbar')\nimport 'gemini-scrollbar/gemini-scrollbar.css'\n\n\ninterface PageInterface {\n    color?: string\n    title?: string|VNode\n}\n\nconst Page = defineComponent((props: PageInterface, content) => {\n    const scrollTop = ref(0);\n    const $el: any = ref<Element | ComponentInternalInstance | null>(null);\n    const $scroll = ref();\n    let myScrollbar: any;\n\n    // onBeforeRouteLeave((to, from, next) => {\n    //     scrollTop.value = $el.value.scrollTop;\n    //     next();\n    // })\n\n    onMounted(() => {\n        \n        myScrollbar = new GeminiScrollbar({\n            element: $scroll.value\n        }).create();\n        $el.value = myScrollbar._viewElement;\n    })\n\n    onActivated(() => {\n        // console.log(getCurrentInstance())\n    })\n\n\n    onActivated(() => {\n        scrollTop.value && (myScrollbar._viewElement.scrollTop = scrollTop.value);\n    })\n\n    onUnmounted(() => {\n        myScrollbar.destroy();\n    })\n\n\n    return () => <div style={{ position: 'relative', background: props.color, height: '100%', overflow: 'auto'}}>\n        <div ref={$scroll}>\n            <div style={{ padding: '10px 20px', boxSizing: 'border-box' }}>\n                { props.title && <div style={{fontSize: '30px', marginBottom: '20px', letterSpacing: '2px'}}>{props.title}</div> }\n                { content.slots.default && content.slots.default() }\n            </div>\n            \n        </div>\n        \n        <BackTop target={() => $el.value} />\n    </div>\n\n})\nPage.props = {\n    color: {\n        type: String,\n        default: '#f5f5f5'\n    },\n    title: {\n        type: [String, String]\n    }\n}\n\nexport default Page;"],"sourceRoot":""}