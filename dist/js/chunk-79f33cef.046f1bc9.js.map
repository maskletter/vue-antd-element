{"version":3,"sources":["webpack:///./src/components/container.tsx","webpack:///./src/views/components/container.tsx","webpack:///./src/components/admin/page.tsx"],"names":["Container","props","content","tag","attrs","slots","default","Object","Function","title","onBack","padding","HomeFilled","alert","fontSize","color","GeminiScrollbar","Page","myScrollbar","scrollTop","$el","$scroll","element","value","create","_viewElement","destroy","position","background","height","overflow","boxSizing","marginBottom","letterSpacing","type","String"],"mappings":"2KAqBMA,EAAY,gBAAgB,SAACC,EAAwEC,GAEvG,OAAO,yBAAC,aACFD,EAAME,IAAM,eAAYF,EAAME,IAAKD,EAAQE,OAAS,eAAYF,EAAQG,MAAMC,QAAgBJ,EAAQE,aAOhHJ,EAAUC,MAAQ,CACdE,IAAK,CAACI,OAAOC,WAIF,Q,wBC7BT,EAAiB,SAACP,GACpB,qBAAuB,OAAvB,MAA0CA,EAAMQ,MAAhD,YAAkER,EAAM,aAAxE,OAA8FA,EAAMS,QAApG,OAEE,EAAkB,SAACT,GAAD,cAAC,SAA8GA,EAA/G,KAA+F,SAA/F,OAET,6BAAgB,WAE3B,OAAO,yBAAC,QAAD,MAAkB,oBAAlB,kHAAC,iCAAD,UAIc,CAACU,QAAS,GAJxB,MAIkC,WAJlC,kCAAC,GAAD,MAKuB,QALvB,YAKyC,cALzC,iBAAC,iCAAD,UAQc,CAACA,QAAS,GARxB,MAQkC,WARlC,kCAAC,GAAD,MASkB,QATlB,OASkC,kBAAM,MATxC,YASwD,qBATxD,IASkF,QATlF,iBAAC,iCAAD,UAYc,CAACA,QAAS,GAZxB,MAYkC,WAZlC,kCAAC,GAAD,gBAAC,kBAAD,OAaoD,kBAAM,MAb1D,MAasE,QAbtE,YAawF,cAbxF,iBAAC,iCAAD,UAgBc,CAACA,QAAS,QAhBxB,MAgBuC,mBAhBvC,iDAAC,GAAD,IAkBiBC,EAAA,KAlBjB,QAkBsC,kBAAMC,MAAM,UAlBlD,MAkBmE,CAACC,SAAU,OAAQC,MAAO,SAlB7F,mB,0ECXLC,G,UAAkB,EAAQ,SAS1BC,EAAO,gBAAgB,SAAChB,EAAsBC,GAChD,IAGIgB,EAHEC,EAAY,eAAI,GAChBC,EAAW,eAAgD,MAC3DC,EAAU,iBA8BhB,OAtBA,gBAAU,WAENH,EAAc,IAAIF,EAAgB,CAC9BM,QAASD,EAAQE,QAClBC,SACHJ,EAAIG,MAAQL,EAAYO,gBAG5B,gBAAY,eAKZ,gBAAY,WACRN,EAAUI,QAAUL,EAAYO,aAAaN,UAAYA,EAAUI,UAGvE,gBAAY,WACRL,EAAYQ,aAIT,sCAAkB,CAAEC,SAAU,WAAYC,WAAY3B,EAAMc,MAAOc,OAAQ,OAAQC,SAAU,SAA7F,mBACOT,GADP,qBAEa,CAAEV,QAAS,YAAaoB,UAAW,eAFhD,CAGO9B,EAAMQ,OAAN,oBAA2B,CAACK,SAAU,OAAQkB,aAAc,OAAQC,cAAe,QAAnF,CAA4FhC,EAAMQ,QAClGP,EAAQG,MAAMC,SAAWJ,EAAQG,MAAMC,cAJ9C,OAAC,QAAD,OASc,kBAAMc,EAAIG,QATxB,YAaXN,EAAKhB,MAAQ,CACTc,MAAO,CACHmB,KAAMC,OACN7B,QAAS,WAEbG,MAAO,CACHyB,KAAM,CAACC,OAAQA,UAIR","file":"js/chunk-79f33cef.046f1bc9.js","sourcesContent":["import { defineComponent, HtmlHTMLAttributes, createVNode, Events, HTMLAttributes } from \"vue\";\r\n\r\nimport * as RuntimeCore from '@vue/runtime-core'\r\n\r\ntype StringKeyOf<T> = Extract<keyof T, string>\r\ntype EventHandlers<E> = {\r\n    [K in StringKeyOf<E>]?: E[K] extends Function ? E[K] : (payload: E[K]) => void\r\n}\r\ntype ReservedProps = {\r\n    key?: string | number\r\n    ref?:\r\n        | string\r\n        | RuntimeCore.Ref\r\n        | ((ref: Element | RuntimeCore.ComponentInternalInstance | null) => void)\r\n}\r\ntype ElementAttrs<T> = T & EventHandlers<Events> & ReservedProps\r\n\r\n\r\n/**\r\n * 组件主要用于第三方ui没有创建完好的ts声明文件，而导致一些参数异常\r\n */\r\nconst Container = defineComponent((props: ElementAttrs<HTMLAttributes&{[props: string]: any}&{tag?: any}>, content) => {\r\n\r\n    return () => <>\r\n        { props.tag ? createVNode(props.tag, content.attrs) : createVNode(content.slots.default as any, content.attrs) }\r\n    </>\r\n\r\n})\r\n\r\n\r\n\r\nContainer.props = {\r\n    tag: [Object,Function]\r\n}\r\n\r\n\r\nexport default Container;","import { defineComponent } from 'vue';\r\nimport Page from '@/components/admin/page';\r\nimport { PageHeader, Card, Avatar } from 'ant-design-vue'\r\nimport Container from '@/components/container';\r\nimport Br from '@/components/br';\r\nimport { HomeFilled } from \"@ant-design/icons-vue\";\r\n\r\nconst TestPageHeader = (props:{ title: string, 'sub-title'?: string, onBack?: void }) => {\r\n    return <Container tag={PageHeader} title={props.title} sub-title={props['sub-title']} onBack={props.onBack} />;\r\n}\r\nconst Test2PageHeader = (props: { [index in keyof PageHeader]?: PageHeader[index] }&{onBack?: any}) => <Container tag={PageHeader} {...props} />\r\n// console.log(TestPageHeader)\r\nexport default defineComponent(() => {\r\n\r\n    return () => <Page title='内置的container组件使用'>\r\n\r\n        在编写tsx形式时候，往往会遇到很多不能很好的兼容tsx的组件，此时可以使用Container组件，来使用那些不能很好兼容的组件，代码如下\r\n        <Br />\r\n        <Card bodyStyle={{padding: 0}} title='第一种声明方式'>\r\n            <TestPageHeader title='Title' sub-title='2222222222' />\r\n        </Card>\r\n        <Br />\r\n        <Card bodyStyle={{padding: 0}} title='第二种声明方式'>\r\n            <Container title='Title' onBack={() => null} sub-title=\"This is a subtitle\" tag={PageHeader} />\r\n        </Card>\r\n        <Br />\r\n        <Card bodyStyle={{padding: 0}} title='第三种声明方式'>\r\n            <Test2PageHeader backIcon={<HomeFilled />} onBack={() => null} title='Title' sub-title='2222222222' />\r\n        </Card>\r\n        <Br />\r\n        <Card bodyStyle={{padding: '20px'}} title='给不支持事件的组件添加操作事件'>\r\n            点击图标\r\n            <Container tag={HomeFilled} onClick={() => alert('点击了图标')} style={{fontSize: '40px', color: 'blue'}} />\r\n        </Card>\r\n\r\n\r\n    </Page>\r\n\r\n})","import { defineComponent, getCurrentInstance, KeepAlive, ref, ComponentInternalInstance, VNode, onUnmounted, onMounted, onActivated, inject } from 'vue';\r\nimport { BackTop } from 'ant-design-vue'\r\nimport { onBeforeRouteLeave } from 'vue-router'\r\nconst GeminiScrollbar = require('gemini-scrollbar')\r\nimport 'gemini-scrollbar/gemini-scrollbar.css'\r\n\r\n\r\ninterface PageInterface {\r\n    color?: string\r\n    title?: string|VNode\r\n}\r\n\r\nconst Page = defineComponent((props: PageInterface, content) => {\r\n    const scrollTop = ref(0);\r\n    const $el: any = ref<Element | ComponentInternalInstance | null>(null);\r\n    const $scroll = ref();\r\n    let myScrollbar: any;\r\n\r\n    // onBeforeRouteLeave((to, from, next) => {\r\n    //     scrollTop.value = $el.value.scrollTop;\r\n    //     next();\r\n    // })\r\n\r\n    onMounted(() => {\r\n        \r\n        myScrollbar = new GeminiScrollbar({\r\n            element: $scroll.value\r\n        }).create();\r\n        $el.value = myScrollbar._viewElement;\r\n    })\r\n\r\n    onActivated(() => {\r\n        // console.log(getCurrentInstance())\r\n    })\r\n\r\n\r\n    onActivated(() => {\r\n        scrollTop.value && (myScrollbar._viewElement.scrollTop = scrollTop.value);\r\n    })\r\n\r\n    onUnmounted(() => {\r\n        myScrollbar.destroy();\r\n    })\r\n\r\n\r\n    return () => <div style={{ position: 'relative', background: props.color, height: '100%', overflow: 'auto'}}>\r\n        <div ref={$scroll}>\r\n            <div style={{ padding: '10px 20px', boxSizing: 'border-box' }}>\r\n                { props.title && <div style={{fontSize: '30px', marginBottom: '20px', letterSpacing: '2px'}}>{props.title}</div> }\r\n                { content.slots.default && content.slots.default() }\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        <BackTop target={() => $el.value} />\r\n    </div>\r\n\r\n})\r\nPage.props = {\r\n    color: {\r\n        type: String,\r\n        default: '#f5f5f5'\r\n    },\r\n    title: {\r\n        type: [String, String]\r\n    }\r\n}\r\n\r\nexport default Page;"],"sourceRoot":""}