{"version":3,"sources":["webpack:///./src/components/cropper.tsx","webpack:///./node_modules/cropperjs/dist/cropper.js"],"names":["Cropper","props","content","cropper","$el","methods","getCroppedCanvas","toDataURL","this","getData","getCropBoxData","getContainerData","getImageData","setData","data","setDragMode","dragMode","setCropBoxData","setCanvasData","setAspectRatio","aspectRatio","Throttling","time","timeout","callback","setTimeout","value","viewMode","crop","e","emit","console","log","$cropper","width","height","src","String","Number","Object","modelValue","CropperModel","visible","close","onClose","Function","CropperOpen","$div","document","getElementById","createElement","id","body","appendChild","app","unmount","mount","global","factory","module","exports","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","i","length","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_defineProperty","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","from","o","minLen","n","toString","call","slice","name","test","len","arr2","IS_BROWSER","window","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","initialAspectRatio","NaN","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","zoom","TEMPLATE","isNaN","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","toArray","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","hasClass","classList","contains","className","indexOf","addClass","elem","add","trim","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","dataset","getAttribute","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","ratios","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","ratio","sort","a","b","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","getAdjustedSizes","_ref4","isValidWidth","isValidHeight","adjustedWidth","getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","scale","drawImage","map","param","floor","fromCharCode","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","orientation","DataView","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","parseOrientation","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","viewBox","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","dragBox","_this","delta","preventDefault","wheeling","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","x","y","check","side","move","p","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","rotateTo","_scaleX","_scaleY","rounded","sized","widthChanged","heightChanged","HTMLCanvasElement","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","mode","croppable","AnotherCropper","tagName","Error","reloading","sizing","init","read","clone","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","removeChild","template","getElementsByClassName","unbuild"],"mappings":"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","file":"js/chunk-71cacfaf.cb006907.js","sourcesContent":["import { defineComponent, createApp, ref, onMounted, Ref } from 'vue';\nimport { Modal } from 'ant-design-vue'\nimport CropperJs from 'cropperjs'\nimport 'cropperjs/dist/cropper.css'\n\n\nexport interface CropperMethods {\n    getCroppedCanvas: () => HTMLCanvasElement\n    toDataURL: () => string\n    getData: () => Cropper.Data\n    getCropBoxData: () => Cropper.CropBoxData\n    getContainerData: () => Cropper.ContainerData\n    getImageData(): Cropper.ImageData\n    setData(data: Cropper.SetDataOptions): void\n    setDragMode(dragMode: Cropper.DragMode): void\n    setCropBoxData(data: Cropper.SetCropBoxDataOptions): void\n    setCanvasData(data: Cropper.SetCanvasDataOptions): void\n    setAspectRatio(aspectRatio: number): void\n    $cropper: CropperJs\n}\n\ninterface CropperInterface {\n\n    src?: string\n    width?: number\n    height?: number\n    cropper?: Ref<CropperMethods | undefined>\n    value?: string\n\n}\n\nconst Cropper = defineComponent((props: CropperInterface, content) => {\n\n    const $el = ref();\n    let cropper: CropperJs;\n\n    const methods = {\n        getCroppedCanvas(): HTMLCanvasElement{\n            return cropper.getCroppedCanvas()\n        },\n        toDataURL(): string{\n            return this.getCroppedCanvas().toDataURL()\n        },\n        getData(): Cropper.Data{\n            return cropper.getData()\n        },\n        getCropBoxData(): Cropper.CropBoxData{\n            return cropper.getCropBoxData()\n        },\n        getContainerData(): Cropper.ContainerData{\n            return cropper.getContainerData()\n        },\n        getImageData(): Cropper.ImageData{\n            return cropper.getImageData()\n        },\n        setData(data: Cropper.SetDataOptions): void{\n            cropper.setData(data)\n        },\n        setDragMode(dragMode: Cropper.DragMode): void{\n            cropper.setDragMode(dragMode)\n        },\n        setCropBoxData(data: Cropper.SetCropBoxDataOptions): void{\n            cropper.setCropBoxData(data)\n        },\n        setCanvasData(data: Cropper.SetCanvasDataOptions): void{\n            cropper.setCanvasData(data)\n        },\n        setAspectRatio(aspectRatio: number): void{\n            cropper.setAspectRatio(aspectRatio)\n        }\n    }\n\n    const Throttling = (time: number = 300) => {\n        let timeout: any = null;\n        return (callback: Function) => {\n            if(timeout != null) return;\n            timeout = setTimeout(() => {\n                callback()\n                timeout = null;\n            }, time)\n        }\n    }\n    \n    onMounted(() => {\n        const crop = Throttling();\n        cropper = new CropperJs($el.value, {\n            aspectRatio:  4 / 4,\n            viewMode: 1,\n            crop: (e: any) => {\n                crop(() => {\n                    content.emit('update:modelValue', methods.toDataURL())\n                    console.log(e)\n                })\n                \n                \n            }\n        })\n        if(props.cropper) {\n            props.cropper.value = {\n                ...methods,\n                $cropper: cropper\n            };\n        }\n    })\n\n    return () => <div style={{width: props.width+'px', height: props.height+'px'}}>\n        <img ref={$el} src={props.src} alt=\"\"/>\n    </div>\n\n})\n\nCropper.props = {\n    src: String,\n    width: Number,\n    height: Number,\n    cropper: Object,\n    modelValue: String,\n    value: String\n} as any\n\nconst CropperModel = defineComponent((props: { src: string, onClose?: () => void }) => {\n\n    const visible = ref(true);\n    const close = () => {\n        visible.value = false;\n        setTimeout(() => {\n            props.onClose && props.onClose();\n        }, 300)\n    }\n\n    return () => <Modal\n        visible={visible.value}\n        onOk={close}\n        onCancel={close}>\n        <Cropper src={props.src} />\n    </Modal>\n})\nCropperModel.props = {\n    onClose: Function,\n    src: String\n} as any\n\nconst CropperOpen = (src: string) => {\n\n\n    let $div = document.getElementById('cropper-dialog-div');\n    if(!$div) {\n        $div = document.createElement('div')\n        $div.id = 'cropper-dialog-div'\n        document.body.appendChild($div);\n    }\n    // $div.innerHTML = '<div id=\"cropper-dialog-wrapper\"></div>'\n    \n\n    const app = createApp(<CropperModel src={src} onClose={() => {\n        app.unmount($div as HTMLElement);\n    }} />);\n    app.mount($div);\n\n}\n\nexport { CropperOpen }\n\nexport default Cropper;","/*!\n * Cropper.js v1.5.7\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2020-05-23T05:23:00.081Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, (function () { 'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      if (this.disabled) {\n        return;\n      }\n\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && ( // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper = /*#__PURE__*/function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"https://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n})));\n"],"sourceRoot":""}