{"version":3,"sources":["webpack:///./src/components/container.tsx","webpack:///./src/views/components/container.tsx","webpack:///./src/components/admin/page.tsx"],"names":["Container","props","content","tag","slots","default","Object","Function","title","onBack","padding","HomeFilled","alert","fontSize","color","GeminiScrollbar","Page","myScrollbar","scrollTop","$el","$scroll","element","value","create","_viewElement","destroy","position","background","height","overflow","boxSizing","marginBottom","letterSpacing","type","String"],"mappings":"2KAqBMA,EAAY,gBAAgB,SAACC,EAAwEC,GAGvG,OAAO,yBAAC,aACFD,EAAME,IAAM,eAAYF,EAAME,KAAO,eAAYD,EAAQE,MAAMC,eAQzEL,EAAUC,MAAQ,CACdE,IAAK,CAACG,OAAOC,WAIF,Q,wBC/BT,EAAiB,SAACN,GACpB,qBAAuB,OAAvB,MAA0CA,EAAMO,MAAhD,YAAkEP,EAAM,aAAxE,OAA8FA,EAAMQ,QAApG,OAEE,EAAkB,SAACR,GAAD,cAAC,SAA8GA,EAA/G,KAA+F,SAA/F,OAET,6BAAgB,WAE3B,OAAO,yBAAC,QAAD,MAAkB,oBAAlB,kHAAC,iCAAD,UAIc,CAACS,QAAS,GAJxB,MAIkC,WAJlC,kCAAC,GAAD,MAKuB,QALvB,YAKyC,cALzC,iBAAC,iCAAD,UAQc,CAACA,QAAS,GARxB,MAQkC,WARlC,kCAAC,GAAD,MASkB,QATlB,OASkC,kBAAM,MATxC,YASwD,qBATxD,IASkF,QATlF,iBAAC,iCAAD,UAYc,CAACA,QAAS,GAZxB,MAYkC,WAZlC,kCAAC,GAAD,gBAAC,kBAAD,OAaoD,kBAAM,MAb1D,MAasE,QAbtE,YAawF,cAbxF,iBAAC,iCAAD,UAgBc,CAACA,QAAS,QAhBxB,MAgBuC,mBAhBvC,iDAAC,GAAD,IAkBiBC,EAAA,KAlBjB,QAkBsC,kBAAMC,MAAM,UAlBlD,MAkBmE,CAACC,SAAU,OAAQC,MAAO,SAlB7F,mB,0ECXLC,G,UAAkB,EAAQ,SAS1BC,EAAO,gBAAgB,SAACf,EAAsBC,GAChD,IAGIe,EAHEC,EAAY,eAAI,GAChBC,EAAW,eAAgD,MAC3DC,EAAU,iBA8BhB,OAtBA,gBAAU,WAENH,EAAc,IAAIF,EAAgB,CAC9BM,QAASD,EAAQE,QAClBC,SACHJ,EAAIG,MAAQL,EAAYO,gBAG5B,gBAAY,eAKZ,gBAAY,WACRN,EAAUI,QAAUL,EAAYO,aAAaN,UAAYA,EAAUI,UAGvE,gBAAY,WACRL,EAAYQ,aAIT,sCAAkB,CAAEC,SAAU,WAAYC,WAAY1B,EAAMa,MAAOc,OAAQ,OAAQC,SAAU,SAA7F,mBACOT,GADP,qBAEa,CAAEV,QAAS,YAAaoB,UAAW,eAFhD,CAGO7B,EAAMO,OAAN,oBAA2B,CAACK,SAAU,OAAQkB,aAAc,OAAQC,cAAe,QAAnF,CAA4F/B,EAAMO,QAClGN,EAAQE,MAAMC,SAAWH,EAAQE,MAAMC,cAJ9C,OAAC,QAAD,OASc,kBAAMc,EAAIG,QATxB,YAaXN,EAAKf,MAAQ,CACTa,MAAO,CACHmB,KAAMC,OACN7B,QAAS,WAEbG,MAAO,CACHyB,KAAM,CAACC,OAAQA,UAIR","file":"js/chunk-79f33cef.d1869430.js","sourcesContent":["import { defineComponent, HtmlHTMLAttributes, createVNode, Events, HTMLAttributes } from \"vue\";\n\nimport * as RuntimeCore from '@vue/runtime-core'\n\ntype StringKeyOf<T> = Extract<keyof T, string>\ntype EventHandlers<E> = {\n    [K in StringKeyOf<E>]?: E[K] extends Function ? E[K] : (payload: E[K]) => void\n}\ntype ReservedProps = {\n    key?: string | number\n    ref?:\n        | string\n        | RuntimeCore.Ref\n        | ((ref: Element | RuntimeCore.ComponentInternalInstance | null) => void)\n}\ntype ElementAttrs<T> = T & EventHandlers<Events> & ReservedProps\n\n\n/**\n * 组件主要用于第三方ui没有创建完好的ts声明文件，而导致一些参数异常\n */\nconst Container = defineComponent((props: ElementAttrs<HTMLAttributes&{[props: string]: any}&{tag?: any}>, content) => {\n\n   \n    return () => <>\n        { props.tag ? createVNode(props.tag) : createVNode(content.slots.default as any) }\n        {/* { createVNode(content.slots.default as any) } */}\n    </>\n\n})\n\n\n\nContainer.props = {\n    tag: [Object,Function]\n}\n\n\nexport default Container;","import { defineComponent } from 'vue';\nimport Page from '@/components/admin/page';\nimport { PageHeader, Card, Avatar } from 'ant-design-vue'\nimport Container from '@/components/container';\nimport Br from '@/components/br';\nimport { HomeFilled } from \"@ant-design/icons-vue\";\n\nconst TestPageHeader = (props:{ title: string, 'sub-title'?: string, onBack?: void }) => {\n    return <Container tag={PageHeader} title={props.title} sub-title={props['sub-title']} onBack={props.onBack} />;\n}\nconst Test2PageHeader = (props: { [index in keyof PageHeader]?: PageHeader[index] }&{onBack?: any}) => <Container tag={PageHeader} {...props} />\n// console.log(TestPageHeader)\nexport default defineComponent(() => {\n\n    return () => <Page title='内置的container组件使用'>\n\n        在编写tsx形式时候，往往会遇到很多不能很好的兼容tsx的组件，此时可以使用Container组件，来使用那些不能很好兼容的组件，代码如下\n        <Br />\n        <Card bodyStyle={{padding: 0}} title='第一种声明方式'>\n            <TestPageHeader title='Title' sub-title='2222222222' />\n        </Card>\n        <Br />\n        <Card bodyStyle={{padding: 0}} title='第二种声明方式'>\n            <Container title='Title' onBack={() => null} sub-title=\"This is a subtitle\" tag={PageHeader} />\n        </Card>\n        <Br />\n        <Card bodyStyle={{padding: 0}} title='第三种声明方式'>\n            <Test2PageHeader backIcon={<HomeFilled />} onBack={() => null} title='Title' sub-title='2222222222' />\n        </Card>\n        <Br />\n        <Card bodyStyle={{padding: '20px'}} title='给不支持事件的组件添加操作事件'>\n            点击图标\n            <Container tag={HomeFilled} onClick={() => alert('点击了图标')} style={{fontSize: '40px', color: 'blue'}} />\n        </Card>\n\n\n    </Page>\n\n})","import { defineComponent, getCurrentInstance, KeepAlive, ref, ComponentInternalInstance, VNode, onUnmounted, onMounted, onActivated, inject } from 'vue';\nimport { BackTop } from 'ant-design-vue'\nimport { onBeforeRouteLeave } from 'vue-router'\nconst GeminiScrollbar = require('gemini-scrollbar')\nimport 'gemini-scrollbar/gemini-scrollbar.css'\n\n\ninterface PageInterface {\n    color?: string\n    title?: string|VNode\n}\n\nconst Page = defineComponent((props: PageInterface, content) => {\n    const scrollTop = ref(0);\n    const $el: any = ref<Element | ComponentInternalInstance | null>(null);\n    const $scroll = ref();\n    let myScrollbar: any;\n\n    // onBeforeRouteLeave((to, from, next) => {\n    //     scrollTop.value = $el.value.scrollTop;\n    //     next();\n    // })\n\n    onMounted(() => {\n        \n        myScrollbar = new GeminiScrollbar({\n            element: $scroll.value\n        }).create();\n        $el.value = myScrollbar._viewElement;\n    })\n\n    onActivated(() => {\n        // console.log(getCurrentInstance())\n    })\n\n\n    onActivated(() => {\n        scrollTop.value && (myScrollbar._viewElement.scrollTop = scrollTop.value);\n    })\n\n    onUnmounted(() => {\n        myScrollbar.destroy();\n    })\n\n\n    return () => <div style={{ position: 'relative', background: props.color, height: '100%', overflow: 'auto'}}>\n        <div ref={$scroll}>\n            <div style={{ padding: '10px 20px', boxSizing: 'border-box' }}>\n                { props.title && <div style={{fontSize: '30px', marginBottom: '20px', letterSpacing: '2px'}}>{props.title}</div> }\n                { content.slots.default && content.slots.default() }\n            </div>\n            \n        </div>\n        \n        <BackTop target={() => $el.value} />\n    </div>\n\n})\nPage.props = {\n    color: {\n        type: String,\n        default: '#f5f5f5'\n    },\n    title: {\n        type: [String, String]\n    }\n}\n\nexport default Page;"],"sourceRoot":""}